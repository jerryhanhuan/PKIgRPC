// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto

#ifndef PROTOBUF_INCLUDED_msg_2eproto
#define PROTOBUF_INCLUDED_msg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_msg_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_msg_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_msg_2eproto();
class MsgRequest;
class MsgRequestDefaultTypeInternal;
extern MsgRequestDefaultTypeInternal _MsgRequest_default_instance_;
class MsgResponse;
class MsgResponseDefaultTypeInternal;
extern MsgResponseDefaultTypeInternal _MsgResponse_default_instance_;
namespace google {
namespace protobuf {
template<> ::MsgRequest* Arena::CreateMaybeMessage<::MsgRequest>(Arena*);
template<> ::MsgResponse* Arena::CreateMaybeMessage<::MsgResponse>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class MsgRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MsgRequest) */ {
 public:
  MsgRequest();
  virtual ~MsgRequest();

  MsgRequest(const MsgRequest& from);

  inline MsgRequest& operator=(const MsgRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgRequest(MsgRequest&& from) noexcept
    : MsgRequest() {
    *this = ::std::move(from);
  }

  inline MsgRequest& operator=(MsgRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MsgRequest& default_instance();

  enum RqInfoCase {
    kName = 1,
    kId = 2,
    RQ_INFO_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgRequest* internal_default_instance() {
    return reinterpret_cast<const MsgRequest*>(
               &_MsgRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MsgRequest* other);
  friend void swap(MsgRequest& a, MsgRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgRequest* New() const final {
    return CreateMaybeMessage<MsgRequest>(nullptr);
  }

  MsgRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgRequest& from);
  void MergeFrom(const MsgRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  private:
  bool has_name() const;
  public:
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string id = 2;
  private:
  bool has_id() const;
  public:
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  void clear_rq_info();
  RqInfoCase rq_info_case() const;
  // @@protoc_insertion_point(class_scope:MsgRequest)
 private:
  class HasBitSetters;
  void set_has_name();
  void set_has_id();

  inline bool has_rq_info() const;
  inline void clear_has_rq_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union RqInfoUnion {
    RqInfoUnion() {}
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr id_;
  } rq_info_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_msg_2eproto;
};
// -------------------------------------------------------------------

class MsgResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MsgResponse) */ {
 public:
  MsgResponse();
  virtual ~MsgResponse();

  MsgResponse(const MsgResponse& from);

  inline MsgResponse& operator=(const MsgResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgResponse(MsgResponse&& from) noexcept
    : MsgResponse() {
    *this = ::std::move(from);
  }

  inline MsgResponse& operator=(MsgResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MsgResponse& default_instance();

  enum RsInfoCase {
    kAddress = 1,
    kPhonenumber = 2,
    RS_INFO_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgResponse* internal_default_instance() {
    return reinterpret_cast<const MsgResponse*>(
               &_MsgResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MsgResponse* other);
  friend void swap(MsgResponse& a, MsgResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgResponse* New() const final {
    return CreateMaybeMessage<MsgResponse>(nullptr);
  }

  MsgResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgResponse& from);
  void MergeFrom(const MsgResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string address = 1;
  private:
  bool has_address() const;
  public:
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // string phonenumber = 2;
  private:
  bool has_phonenumber() const;
  public:
  void clear_phonenumber();
  static const int kPhonenumberFieldNumber = 2;
  const ::std::string& phonenumber() const;
  void set_phonenumber(const ::std::string& value);
  #if LANG_CXX11
  void set_phonenumber(::std::string&& value);
  #endif
  void set_phonenumber(const char* value);
  void set_phonenumber(const char* value, size_t size);
  ::std::string* mutable_phonenumber();
  ::std::string* release_phonenumber();
  void set_allocated_phonenumber(::std::string* phonenumber);

  void clear_rs_info();
  RsInfoCase rs_info_case() const;
  // @@protoc_insertion_point(class_scope:MsgResponse)
 private:
  class HasBitSetters;
  void set_has_address();
  void set_has_phonenumber();

  inline bool has_rs_info() const;
  inline void clear_has_rs_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union RsInfoUnion {
    RsInfoUnion() {}
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::ArenaStringPtr phonenumber_;
  } rs_info_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_msg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgRequest

// string name = 1;
inline bool MsgRequest::has_name() const {
  return rq_info_case() == kName;
}
inline void MsgRequest::set_has_name() {
  _oneof_case_[0] = kName;
}
inline void MsgRequest::clear_name() {
  if (has_name()) {
    rq_info_.name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_rq_info();
  }
}
inline const ::std::string& MsgRequest::name() const {
  // @@protoc_insertion_point(field_get:MsgRequest.name)
  if (has_name()) {
    return rq_info_.name_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void MsgRequest::set_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MsgRequest.name)
  if (!has_name()) {
    clear_rq_info();
    set_has_name();
    rq_info_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  rq_info_.name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MsgRequest.name)
}
#if LANG_CXX11
inline void MsgRequest::set_name(::std::string&& value) {
  // @@protoc_insertion_point(field_set:MsgRequest.name)
  if (!has_name()) {
    clear_rq_info();
    set_has_name();
    rq_info_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  rq_info_.name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MsgRequest.name)
}
#endif
inline void MsgRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_name()) {
    clear_rq_info();
    set_has_name();
    rq_info_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  rq_info_.name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MsgRequest.name)
}
inline void MsgRequest::set_name(const char* value, size_t size) {
  if (!has_name()) {
    clear_rq_info();
    set_has_name();
    rq_info_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  rq_info_.name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MsgRequest.name)
}
inline ::std::string* MsgRequest::mutable_name() {
  if (!has_name()) {
    clear_rq_info();
    set_has_name();
    rq_info_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:MsgRequest.name)
  return rq_info_.name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRequest::release_name() {
  // @@protoc_insertion_point(field_release:MsgRequest.name)
  if (has_name()) {
    clear_has_rq_info();
    return rq_info_.name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void MsgRequest::set_allocated_name(::std::string* name) {
  if (has_rq_info()) {
    clear_rq_info();
  }
  if (name != nullptr) {
    set_has_name();
    rq_info_.name_.UnsafeSetDefault(name);
  }
  // @@protoc_insertion_point(field_set_allocated:MsgRequest.name)
}

// string id = 2;
inline bool MsgRequest::has_id() const {
  return rq_info_case() == kId;
}
inline void MsgRequest::set_has_id() {
  _oneof_case_[0] = kId;
}
inline void MsgRequest::clear_id() {
  if (has_id()) {
    rq_info_.id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_rq_info();
  }
}
inline const ::std::string& MsgRequest::id() const {
  // @@protoc_insertion_point(field_get:MsgRequest.id)
  if (has_id()) {
    return rq_info_.id_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void MsgRequest::set_id(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MsgRequest.id)
  if (!has_id()) {
    clear_rq_info();
    set_has_id();
    rq_info_.id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  rq_info_.id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MsgRequest.id)
}
#if LANG_CXX11
inline void MsgRequest::set_id(::std::string&& value) {
  // @@protoc_insertion_point(field_set:MsgRequest.id)
  if (!has_id()) {
    clear_rq_info();
    set_has_id();
    rq_info_.id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  rq_info_.id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MsgRequest.id)
}
#endif
inline void MsgRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_id()) {
    clear_rq_info();
    set_has_id();
    rq_info_.id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  rq_info_.id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MsgRequest.id)
}
inline void MsgRequest::set_id(const char* value, size_t size) {
  if (!has_id()) {
    clear_rq_info();
    set_has_id();
    rq_info_.id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  rq_info_.id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MsgRequest.id)
}
inline ::std::string* MsgRequest::mutable_id() {
  if (!has_id()) {
    clear_rq_info();
    set_has_id();
    rq_info_.id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:MsgRequest.id)
  return rq_info_.id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRequest::release_id() {
  // @@protoc_insertion_point(field_release:MsgRequest.id)
  if (has_id()) {
    clear_has_rq_info();
    return rq_info_.id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void MsgRequest::set_allocated_id(::std::string* id) {
  if (has_rq_info()) {
    clear_rq_info();
  }
  if (id != nullptr) {
    set_has_id();
    rq_info_.id_.UnsafeSetDefault(id);
  }
  // @@protoc_insertion_point(field_set_allocated:MsgRequest.id)
}

inline bool MsgRequest::has_rq_info() const {
  return rq_info_case() != RQ_INFO_NOT_SET;
}
inline void MsgRequest::clear_has_rq_info() {
  _oneof_case_[0] = RQ_INFO_NOT_SET;
}
inline MsgRequest::RqInfoCase MsgRequest::rq_info_case() const {
  return MsgRequest::RqInfoCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// MsgResponse

// string address = 1;
inline bool MsgResponse::has_address() const {
  return rs_info_case() == kAddress;
}
inline void MsgResponse::set_has_address() {
  _oneof_case_[0] = kAddress;
}
inline void MsgResponse::clear_address() {
  if (has_address()) {
    rs_info_.address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_rs_info();
  }
}
inline const ::std::string& MsgResponse::address() const {
  // @@protoc_insertion_point(field_get:MsgResponse.address)
  if (has_address()) {
    return rs_info_.address_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void MsgResponse::set_address(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MsgResponse.address)
  if (!has_address()) {
    clear_rs_info();
    set_has_address();
    rs_info_.address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  rs_info_.address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MsgResponse.address)
}
#if LANG_CXX11
inline void MsgResponse::set_address(::std::string&& value) {
  // @@protoc_insertion_point(field_set:MsgResponse.address)
  if (!has_address()) {
    clear_rs_info();
    set_has_address();
    rs_info_.address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  rs_info_.address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MsgResponse.address)
}
#endif
inline void MsgResponse::set_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_address()) {
    clear_rs_info();
    set_has_address();
    rs_info_.address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  rs_info_.address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MsgResponse.address)
}
inline void MsgResponse::set_address(const char* value, size_t size) {
  if (!has_address()) {
    clear_rs_info();
    set_has_address();
    rs_info_.address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  rs_info_.address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MsgResponse.address)
}
inline ::std::string* MsgResponse::mutable_address() {
  if (!has_address()) {
    clear_rs_info();
    set_has_address();
    rs_info_.address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:MsgResponse.address)
  return rs_info_.address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgResponse::release_address() {
  // @@protoc_insertion_point(field_release:MsgResponse.address)
  if (has_address()) {
    clear_has_rs_info();
    return rs_info_.address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void MsgResponse::set_allocated_address(::std::string* address) {
  if (has_rs_info()) {
    clear_rs_info();
  }
  if (address != nullptr) {
    set_has_address();
    rs_info_.address_.UnsafeSetDefault(address);
  }
  // @@protoc_insertion_point(field_set_allocated:MsgResponse.address)
}

// string phonenumber = 2;
inline bool MsgResponse::has_phonenumber() const {
  return rs_info_case() == kPhonenumber;
}
inline void MsgResponse::set_has_phonenumber() {
  _oneof_case_[0] = kPhonenumber;
}
inline void MsgResponse::clear_phonenumber() {
  if (has_phonenumber()) {
    rs_info_.phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_rs_info();
  }
}
inline const ::std::string& MsgResponse::phonenumber() const {
  // @@protoc_insertion_point(field_get:MsgResponse.phonenumber)
  if (has_phonenumber()) {
    return rs_info_.phonenumber_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void MsgResponse::set_phonenumber(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MsgResponse.phonenumber)
  if (!has_phonenumber()) {
    clear_rs_info();
    set_has_phonenumber();
    rs_info_.phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  rs_info_.phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MsgResponse.phonenumber)
}
#if LANG_CXX11
inline void MsgResponse::set_phonenumber(::std::string&& value) {
  // @@protoc_insertion_point(field_set:MsgResponse.phonenumber)
  if (!has_phonenumber()) {
    clear_rs_info();
    set_has_phonenumber();
    rs_info_.phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  rs_info_.phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MsgResponse.phonenumber)
}
#endif
inline void MsgResponse::set_phonenumber(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_phonenumber()) {
    clear_rs_info();
    set_has_phonenumber();
    rs_info_.phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  rs_info_.phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MsgResponse.phonenumber)
}
inline void MsgResponse::set_phonenumber(const char* value, size_t size) {
  if (!has_phonenumber()) {
    clear_rs_info();
    set_has_phonenumber();
    rs_info_.phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  rs_info_.phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MsgResponse.phonenumber)
}
inline ::std::string* MsgResponse::mutable_phonenumber() {
  if (!has_phonenumber()) {
    clear_rs_info();
    set_has_phonenumber();
    rs_info_.phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:MsgResponse.phonenumber)
  return rs_info_.phonenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgResponse::release_phonenumber() {
  // @@protoc_insertion_point(field_release:MsgResponse.phonenumber)
  if (has_phonenumber()) {
    clear_has_rs_info();
    return rs_info_.phonenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void MsgResponse::set_allocated_phonenumber(::std::string* phonenumber) {
  if (has_rs_info()) {
    clear_rs_info();
  }
  if (phonenumber != nullptr) {
    set_has_phonenumber();
    rs_info_.phonenumber_.UnsafeSetDefault(phonenumber);
  }
  // @@protoc_insertion_point(field_set_allocated:MsgResponse.phonenumber)
}

inline bool MsgResponse::has_rs_info() const {
  return rs_info_case() != RS_INFO_NOT_SET;
}
inline void MsgResponse::clear_has_rs_info() {
  _oneof_case_[0] = RS_INFO_NOT_SET;
}
inline MsgResponse::RsInfoCase MsgResponse::rs_info_case() const {
  return MsgResponse::RsInfoCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_msg_2eproto
