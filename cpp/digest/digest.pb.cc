// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: digest.proto

#include "digest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

class DigestRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigestRequest> _instance;
} _DigestRequest_default_instance_;
class DigestResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigestResponse> _instance;
} _DigestResponse_default_instance_;
static void InitDefaultsDigestRequest_digest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DigestRequest_default_instance_;
    new (ptr) ::DigestRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DigestRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DigestRequest_digest_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDigestRequest_digest_2eproto}, {}};

static void InitDefaultsDigestResponse_digest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DigestResponse_default_instance_;
    new (ptr) ::DigestResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DigestResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DigestResponse_digest_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDigestResponse_digest_2eproto}, {}};

void InitDefaults_digest_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_DigestRequest_digest_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigestResponse_digest_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_digest_2eproto[2];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_digest_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_digest_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_digest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DigestRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DigestRequest, transformation_),
  PROTOBUF_FIELD_OFFSET(::DigestRequest, messages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DigestResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::DigestResponse, digest_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::DigestRequest)},
  { 7, -1, sizeof(::DigestResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DigestRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DigestResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_digest_2eproto = {
  {}, AddDescriptors_digest_2eproto, "digest.proto", schemas,
  file_default_instances, TableStruct_digest_2eproto::offsets,
  file_level_metadata_digest_2eproto, 2, file_level_enum_descriptors_digest_2eproto, file_level_service_descriptors_digest_2eproto,
};

const char descriptor_table_protodef_digest_2eproto[] =
  "\n\014digest.proto\"9\n\rDigestRequest\022\026\n\016trans"
  "formation\030\001 \001(\t\022\020\n\010messages\030\002 \003(\014\" \n\016Dig"
  "estResponse\022\016\n\006digest\030\001 \001(\0142>\n\rDigestSer"
  "vice\022-\n\006Digest\022\016.DigestRequest\032\017.DigestR"
  "esponse\"\000(\001b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_digest_2eproto = {
  false, InitDefaults_digest_2eproto, 
  descriptor_table_protodef_digest_2eproto,
  "digest.proto", &assign_descriptors_table_digest_2eproto, 179,
};

void AddDescriptors_digest_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_digest_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_digest_2eproto = []() { AddDescriptors_digest_2eproto(); return true; }();

// ===================================================================

void DigestRequest::InitAsDefaultInstance() {
}
class DigestRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigestRequest::kTransformationFieldNumber;
const int DigestRequest::kMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigestRequest::DigestRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DigestRequest)
}
DigestRequest::DigestRequest(const DigestRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  transformation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transformation().size() > 0) {
    transformation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transformation_);
  }
  // @@protoc_insertion_point(copy_constructor:DigestRequest)
}

void DigestRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DigestRequest_digest_2eproto.base);
  transformation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DigestRequest::~DigestRequest() {
  // @@protoc_insertion_point(destructor:DigestRequest)
  SharedDtor();
}

void DigestRequest::SharedDtor() {
  transformation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DigestRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DigestRequest& DigestRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DigestRequest_digest_2eproto.base);
  return *internal_default_instance();
}


void DigestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DigestRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  transformation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DigestRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DigestRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string transformation = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("DigestRequest.transformation");
        object = msg->mutable_transformation();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated bytes messages = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          object = msg->add_messages();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParser;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DigestRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DigestRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string transformation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transformation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transformation().data(), static_cast<int>(this->transformation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DigestRequest.transformation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes messages = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_messages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DigestRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DigestRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DigestRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DigestRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string transformation = 1;
  if (this->transformation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transformation().data(), static_cast<int>(this->transformation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DigestRequest.transformation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->transformation(), output);
  }

  // repeated bytes messages = 2;
  for (int i = 0, n = this->messages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->messages(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DigestRequest)
}

::google::protobuf::uint8* DigestRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DigestRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string transformation = 1;
  if (this->transformation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transformation().data(), static_cast<int>(this->transformation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DigestRequest.transformation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->transformation(), target);
  }

  // repeated bytes messages = 2;
  for (int i = 0, n = this->messages_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->messages(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DigestRequest)
  return target;
}

size_t DigestRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DigestRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes messages = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->messages_size());
  for (int i = 0, n = this->messages_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->messages(i));
  }

  // string transformation = 1;
  if (this->transformation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transformation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DigestRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DigestRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DigestRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DigestRequest)
    MergeFrom(*source);
  }
}

void DigestRequest::MergeFrom(const DigestRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DigestRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
  if (from.transformation().size() > 0) {

    transformation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transformation_);
  }
}

void DigestRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DigestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestRequest::CopyFrom(const DigestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DigestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestRequest::IsInitialized() const {
  return true;
}

void DigestRequest::Swap(DigestRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigestRequest::InternalSwap(DigestRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  messages_.InternalSwap(CastToBase(&other->messages_));
  transformation_.Swap(&other->transformation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DigestRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_digest_2eproto);
  return ::file_level_metadata_digest_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DigestResponse::InitAsDefaultInstance() {
}
class DigestResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigestResponse::kDigestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigestResponse::DigestResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DigestResponse)
}
DigestResponse::DigestResponse(const DigestResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  digest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.digest().size() > 0) {
    digest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digest_);
  }
  // @@protoc_insertion_point(copy_constructor:DigestResponse)
}

void DigestResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DigestResponse_digest_2eproto.base);
  digest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DigestResponse::~DigestResponse() {
  // @@protoc_insertion_point(destructor:DigestResponse)
  SharedDtor();
}

void DigestResponse::SharedDtor() {
  digest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DigestResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DigestResponse& DigestResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DigestResponse_digest_2eproto.base);
  return *internal_default_instance();
}


void DigestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DigestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DigestResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DigestResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes digest = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_digest();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DigestResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DigestResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes digest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_digest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DigestResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DigestResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DigestResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DigestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes digest = 1;
  if (this->digest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->digest(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DigestResponse)
}

::google::protobuf::uint8* DigestResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DigestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes digest = 1;
  if (this->digest().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->digest(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DigestResponse)
  return target;
}

size_t DigestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DigestResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes digest = 1;
  if (this->digest().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->digest());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DigestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestResponse* source =
      ::google::protobuf::DynamicCastToGenerated<DigestResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DigestResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DigestResponse)
    MergeFrom(*source);
  }
}

void DigestResponse::MergeFrom(const DigestResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DigestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.digest().size() > 0) {

    digest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.digest_);
  }
}

void DigestResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DigestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestResponse::CopyFrom(const DigestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DigestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestResponse::IsInitialized() const {
  return true;
}

void DigestResponse::Swap(DigestResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigestResponse::InternalSwap(DigestResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  digest_.Swap(&other->digest_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DigestResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_digest_2eproto);
  return ::file_level_metadata_digest_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::DigestRequest* Arena::CreateMaybeMessage< ::DigestRequest >(Arena* arena) {
  return Arena::CreateInternal< ::DigestRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::DigestResponse* Arena::CreateMaybeMessage< ::DigestResponse >(Arena* arena) {
  return Arena::CreateInternal< ::DigestResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
