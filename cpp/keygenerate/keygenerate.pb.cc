// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: keygenerate.proto

#include "keygenerate.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_keygenerate_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_KeyGenerateResponse_KeyPair_keygenerate_2eproto;
class KeyGenerateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyGenerateRequest> _instance;
} _KeyGenerateRequest_default_instance_;
class KeyGenerateResponse_KeyPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyGenerateResponse_KeyPair> _instance;
} _KeyGenerateResponse_KeyPair_default_instance_;
class KeyGenerateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyGenerateResponse> _instance;
  ::google::protobuf::internal::ArenaStringPtr secret_key_;
  const ::KeyGenerateResponse_KeyPair* key_pair_;
} _KeyGenerateResponse_default_instance_;
static void InitDefaultsKeyGenerateRequest_keygenerate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_KeyGenerateRequest_default_instance_;
    new (ptr) ::KeyGenerateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KeyGenerateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KeyGenerateRequest_keygenerate_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKeyGenerateRequest_keygenerate_2eproto}, {}};

static void InitDefaultsKeyGenerateResponse_KeyPair_keygenerate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_KeyGenerateResponse_KeyPair_default_instance_;
    new (ptr) ::KeyGenerateResponse_KeyPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KeyGenerateResponse_KeyPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KeyGenerateResponse_KeyPair_keygenerate_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKeyGenerateResponse_KeyPair_keygenerate_2eproto}, {}};

static void InitDefaultsKeyGenerateResponse_keygenerate_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_KeyGenerateResponse_default_instance_;
    new (ptr) ::KeyGenerateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KeyGenerateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_KeyGenerateResponse_keygenerate_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsKeyGenerateResponse_keygenerate_2eproto}, {
      &scc_info_KeyGenerateResponse_KeyPair_keygenerate_2eproto.base,}};

void InitDefaults_keygenerate_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_KeyGenerateRequest_keygenerate_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyGenerateResponse_KeyPair_keygenerate_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyGenerateResponse_keygenerate_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_keygenerate_2eproto[3];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_keygenerate_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_keygenerate_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_keygenerate_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KeyGenerateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KeyGenerateRequest, transformation_),
  PROTOBUF_FIELD_OFFSET(::KeyGenerateRequest, key_size_),
  PROTOBUF_FIELD_OFFSET(::KeyGenerateRequest, curve_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KeyGenerateResponse_KeyPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::KeyGenerateResponse_KeyPair, public_key_),
  PROTOBUF_FIELD_OFFSET(::KeyGenerateResponse_KeyPair, private_key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::KeyGenerateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::KeyGenerateResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::KeyGenerateResponseDefaultTypeInternal, secret_key_),
  offsetof(::KeyGenerateResponseDefaultTypeInternal, key_pair_),
  PROTOBUF_FIELD_OFFSET(::KeyGenerateResponse, key_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::KeyGenerateRequest)},
  { 8, -1, sizeof(::KeyGenerateResponse_KeyPair)},
  { 15, -1, sizeof(::KeyGenerateResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_KeyGenerateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_KeyGenerateResponse_KeyPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_KeyGenerateResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_keygenerate_2eproto = {
  {}, AddDescriptors_keygenerate_2eproto, "keygenerate.proto", schemas,
  file_default_instances, TableStruct_keygenerate_2eproto::offsets,
  file_level_metadata_keygenerate_2eproto, 3, file_level_enum_descriptors_keygenerate_2eproto, file_level_service_descriptors_keygenerate_2eproto,
};

const char descriptor_table_protodef_keygenerate_2eproto[] =
  "\n\021keygenerate.proto\"M\n\022KeyGenerateReques"
  "t\022\026\n\016transformation\030\001 \001(\t\022\020\n\010key_size\030\002 "
  "\001(\005\022\r\n\005curve\030\003 \001(\t\"\230\001\n\023KeyGenerateRespon"
  "se\022\024\n\nsecret_key\030\001 \001(\014H\000\0220\n\010key_pair\030\002 \001"
  "(\0132\034.KeyGenerateResponse.KeyPairH\000\0322\n\007Ke"
  "yPair\022\022\n\npublic_key\030\001 \001(\014\022\023\n\013private_key"
  "\030\002 \001(\014B\005\n\003key2M\n\022KeyGenerateService\0227\n\010G"
  "enerate\022\023.KeyGenerateRequest\032\024.KeyGenera"
  "teResponse\"\000b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_keygenerate_2eproto = {
  false, InitDefaults_keygenerate_2eproto, 
  descriptor_table_protodef_keygenerate_2eproto,
  "keygenerate.proto", &assign_descriptors_table_keygenerate_2eproto, 340,
};

void AddDescriptors_keygenerate_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_keygenerate_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_keygenerate_2eproto = []() { AddDescriptors_keygenerate_2eproto(); return true; }();

// ===================================================================

void KeyGenerateRequest::InitAsDefaultInstance() {
}
class KeyGenerateRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyGenerateRequest::kTransformationFieldNumber;
const int KeyGenerateRequest::kKeySizeFieldNumber;
const int KeyGenerateRequest::kCurveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyGenerateRequest::KeyGenerateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyGenerateRequest)
}
KeyGenerateRequest::KeyGenerateRequest(const KeyGenerateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  transformation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transformation().size() > 0) {
    transformation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transformation_);
  }
  curve_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.curve().size() > 0) {
    curve_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.curve_);
  }
  key_size_ = from.key_size_;
  // @@protoc_insertion_point(copy_constructor:KeyGenerateRequest)
}

void KeyGenerateRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_KeyGenerateRequest_keygenerate_2eproto.base);
  transformation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  curve_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_size_ = 0;
}

KeyGenerateRequest::~KeyGenerateRequest() {
  // @@protoc_insertion_point(destructor:KeyGenerateRequest)
  SharedDtor();
}

void KeyGenerateRequest::SharedDtor() {
  transformation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  curve_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyGenerateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KeyGenerateRequest& KeyGenerateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_KeyGenerateRequest_keygenerate_2eproto.base);
  return *internal_default_instance();
}


void KeyGenerateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyGenerateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transformation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  curve_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_size_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* KeyGenerateRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<KeyGenerateRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string transformation = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("KeyGenerateRequest.transformation");
        object = msg->mutable_transformation();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 key_size = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_key_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string curve = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("KeyGenerateRequest.curve");
        object = msg->mutable_curve();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool KeyGenerateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeyGenerateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string transformation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transformation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transformation().data(), static_cast<int>(this->transformation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KeyGenerateRequest.transformation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 key_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string curve = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_curve()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->curve().data(), static_cast<int>(this->curve().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KeyGenerateRequest.curve"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeyGenerateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeyGenerateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void KeyGenerateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeyGenerateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string transformation = 1;
  if (this->transformation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transformation().data(), static_cast<int>(this->transformation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyGenerateRequest.transformation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->transformation(), output);
  }

  // int32 key_size = 2;
  if (this->key_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->key_size(), output);
  }

  // string curve = 3;
  if (this->curve().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->curve().data(), static_cast<int>(this->curve().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyGenerateRequest.curve");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->curve(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:KeyGenerateRequest)
}

::google::protobuf::uint8* KeyGenerateRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:KeyGenerateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string transformation = 1;
  if (this->transformation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transformation().data(), static_cast<int>(this->transformation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyGenerateRequest.transformation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->transformation(), target);
  }

  // int32 key_size = 2;
  if (this->key_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->key_size(), target);
  }

  // string curve = 3;
  if (this->curve().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->curve().data(), static_cast<int>(this->curve().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyGenerateRequest.curve");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->curve(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyGenerateRequest)
  return target;
}

size_t KeyGenerateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyGenerateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string transformation = 1;
  if (this->transformation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transformation());
  }

  // string curve = 3;
  if (this->curve().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->curve());
  }

  // int32 key_size = 2;
  if (this->key_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyGenerateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyGenerateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyGenerateRequest* source =
      ::google::protobuf::DynamicCastToGenerated<KeyGenerateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyGenerateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyGenerateRequest)
    MergeFrom(*source);
  }
}

void KeyGenerateRequest::MergeFrom(const KeyGenerateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyGenerateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.transformation().size() > 0) {

    transformation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transformation_);
  }
  if (from.curve().size() > 0) {

    curve_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.curve_);
  }
  if (from.key_size() != 0) {
    set_key_size(from.key_size());
  }
}

void KeyGenerateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyGenerateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyGenerateRequest::CopyFrom(const KeyGenerateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyGenerateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyGenerateRequest::IsInitialized() const {
  return true;
}

void KeyGenerateRequest::Swap(KeyGenerateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyGenerateRequest::InternalSwap(KeyGenerateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  transformation_.Swap(&other->transformation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  curve_.Swap(&other->curve_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(key_size_, other->key_size_);
}

::google::protobuf::Metadata KeyGenerateRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_keygenerate_2eproto);
  return ::file_level_metadata_keygenerate_2eproto[kIndexInFileMessages];
}


// ===================================================================

void KeyGenerateResponse_KeyPair::InitAsDefaultInstance() {
}
class KeyGenerateResponse_KeyPair::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyGenerateResponse_KeyPair::kPublicKeyFieldNumber;
const int KeyGenerateResponse_KeyPair::kPrivateKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyGenerateResponse_KeyPair::KeyGenerateResponse_KeyPair()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyGenerateResponse.KeyPair)
}
KeyGenerateResponse_KeyPair::KeyGenerateResponse_KeyPair(const KeyGenerateResponse_KeyPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.public_key().size() > 0) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  private_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.private_key().size() > 0) {
    private_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_key_);
  }
  // @@protoc_insertion_point(copy_constructor:KeyGenerateResponse.KeyPair)
}

void KeyGenerateResponse_KeyPair::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_KeyGenerateResponse_KeyPair_keygenerate_2eproto.base);
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  private_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

KeyGenerateResponse_KeyPair::~KeyGenerateResponse_KeyPair() {
  // @@protoc_insertion_point(destructor:KeyGenerateResponse.KeyPair)
  SharedDtor();
}

void KeyGenerateResponse_KeyPair::SharedDtor() {
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  private_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyGenerateResponse_KeyPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KeyGenerateResponse_KeyPair& KeyGenerateResponse_KeyPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_KeyGenerateResponse_KeyPair_keygenerate_2eproto.base);
  return *internal_default_instance();
}


void KeyGenerateResponse_KeyPair::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyGenerateResponse.KeyPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  private_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* KeyGenerateResponse_KeyPair::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<KeyGenerateResponse_KeyPair*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes public_key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_public_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes private_key = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_private_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool KeyGenerateResponse_KeyPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeyGenerateResponse.KeyPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes public_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_public_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes private_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_private_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeyGenerateResponse.KeyPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeyGenerateResponse.KeyPair)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void KeyGenerateResponse_KeyPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeyGenerateResponse.KeyPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes public_key = 1;
  if (this->public_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->public_key(), output);
  }

  // bytes private_key = 2;
  if (this->private_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->private_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:KeyGenerateResponse.KeyPair)
}

::google::protobuf::uint8* KeyGenerateResponse_KeyPair::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:KeyGenerateResponse.KeyPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes public_key = 1;
  if (this->public_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->public_key(), target);
  }

  // bytes private_key = 2;
  if (this->private_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->private_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyGenerateResponse.KeyPair)
  return target;
}

size_t KeyGenerateResponse_KeyPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyGenerateResponse.KeyPair)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes public_key = 1;
  if (this->public_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->public_key());
  }

  // bytes private_key = 2;
  if (this->private_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->private_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyGenerateResponse_KeyPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyGenerateResponse.KeyPair)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyGenerateResponse_KeyPair* source =
      ::google::protobuf::DynamicCastToGenerated<KeyGenerateResponse_KeyPair>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyGenerateResponse.KeyPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyGenerateResponse.KeyPair)
    MergeFrom(*source);
  }
}

void KeyGenerateResponse_KeyPair::MergeFrom(const KeyGenerateResponse_KeyPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyGenerateResponse.KeyPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.public_key().size() > 0) {

    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  if (from.private_key().size() > 0) {

    private_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_key_);
  }
}

void KeyGenerateResponse_KeyPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyGenerateResponse.KeyPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyGenerateResponse_KeyPair::CopyFrom(const KeyGenerateResponse_KeyPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyGenerateResponse.KeyPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyGenerateResponse_KeyPair::IsInitialized() const {
  return true;
}

void KeyGenerateResponse_KeyPair::Swap(KeyGenerateResponse_KeyPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyGenerateResponse_KeyPair::InternalSwap(KeyGenerateResponse_KeyPair* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  public_key_.Swap(&other->public_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  private_key_.Swap(&other->private_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata KeyGenerateResponse_KeyPair::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_keygenerate_2eproto);
  return ::file_level_metadata_keygenerate_2eproto[kIndexInFileMessages];
}


// ===================================================================

void KeyGenerateResponse::InitAsDefaultInstance() {
  ::_KeyGenerateResponse_default_instance_.secret_key_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::_KeyGenerateResponse_default_instance_.key_pair_ = const_cast< ::KeyGenerateResponse_KeyPair*>(
      ::KeyGenerateResponse_KeyPair::internal_default_instance());
}
class KeyGenerateResponse::HasBitSetters {
 public:
  static const ::KeyGenerateResponse_KeyPair& key_pair(const KeyGenerateResponse* msg);
};

const ::KeyGenerateResponse_KeyPair&
KeyGenerateResponse::HasBitSetters::key_pair(const KeyGenerateResponse* msg) {
  return *msg->key_.key_pair_;
}
void KeyGenerateResponse::set_allocated_key_pair(::KeyGenerateResponse_KeyPair* key_pair) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_key();
  if (key_pair) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      key_pair = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key_pair, submessage_arena);
    }
    set_has_key_pair();
    key_.key_pair_ = key_pair;
  }
  // @@protoc_insertion_point(field_set_allocated:KeyGenerateResponse.key_pair)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyGenerateResponse::kSecretKeyFieldNumber;
const int KeyGenerateResponse::kKeyPairFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyGenerateResponse::KeyGenerateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyGenerateResponse)
}
KeyGenerateResponse::KeyGenerateResponse(const KeyGenerateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_key();
  switch (from.key_case()) {
    case kSecretKey: {
      set_secret_key(from.secret_key());
      break;
    }
    case kKeyPair: {
      mutable_key_pair()->::KeyGenerateResponse_KeyPair::MergeFrom(from.key_pair());
      break;
    }
    case KEY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:KeyGenerateResponse)
}

void KeyGenerateResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_KeyGenerateResponse_keygenerate_2eproto.base);
  clear_has_key();
}

KeyGenerateResponse::~KeyGenerateResponse() {
  // @@protoc_insertion_point(destructor:KeyGenerateResponse)
  SharedDtor();
}

void KeyGenerateResponse::SharedDtor() {
  if (has_key()) {
    clear_key();
  }
}

void KeyGenerateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KeyGenerateResponse& KeyGenerateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_KeyGenerateResponse_keygenerate_2eproto.base);
  return *internal_default_instance();
}


void KeyGenerateResponse::clear_key() {
// @@protoc_insertion_point(one_of_clear_start:KeyGenerateResponse)
  switch (key_case()) {
    case kSecretKey: {
      key_.secret_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kKeyPair: {
      delete key_.key_pair_;
      break;
    }
    case KEY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KEY_NOT_SET;
}


void KeyGenerateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyGenerateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_key();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* KeyGenerateResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<KeyGenerateResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes secret_key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_secret_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .KeyGenerateResponse.KeyPair key_pair = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::KeyGenerateResponse_KeyPair::_InternalParse;
        object = msg->mutable_key_pair();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool KeyGenerateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeyGenerateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes secret_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_secret_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KeyGenerateResponse.KeyPair key_pair = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key_pair()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeyGenerateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeyGenerateResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void KeyGenerateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeyGenerateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes secret_key = 1;
  if (has_secret_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->secret_key(), output);
  }

  // .KeyGenerateResponse.KeyPair key_pair = 2;
  if (has_key_pair()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::key_pair(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:KeyGenerateResponse)
}

::google::protobuf::uint8* KeyGenerateResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:KeyGenerateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes secret_key = 1;
  if (has_secret_key()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->secret_key(), target);
  }

  // .KeyGenerateResponse.KeyPair key_pair = 2;
  if (has_key_pair()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::key_pair(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyGenerateResponse)
  return target;
}

size_t KeyGenerateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyGenerateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (key_case()) {
    // bytes secret_key = 1;
    case kSecretKey: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->secret_key());
      break;
    }
    // .KeyGenerateResponse.KeyPair key_pair = 2;
    case kKeyPair: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *key_.key_pair_);
      break;
    }
    case KEY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyGenerateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyGenerateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyGenerateResponse* source =
      ::google::protobuf::DynamicCastToGenerated<KeyGenerateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyGenerateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyGenerateResponse)
    MergeFrom(*source);
  }
}

void KeyGenerateResponse::MergeFrom(const KeyGenerateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyGenerateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.key_case()) {
    case kSecretKey: {
      set_secret_key(from.secret_key());
      break;
    }
    case kKeyPair: {
      mutable_key_pair()->::KeyGenerateResponse_KeyPair::MergeFrom(from.key_pair());
      break;
    }
    case KEY_NOT_SET: {
      break;
    }
  }
}

void KeyGenerateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyGenerateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyGenerateResponse::CopyFrom(const KeyGenerateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyGenerateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyGenerateResponse::IsInitialized() const {
  return true;
}

void KeyGenerateResponse::Swap(KeyGenerateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyGenerateResponse::InternalSwap(KeyGenerateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(key_, other->key_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata KeyGenerateResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_keygenerate_2eproto);
  return ::file_level_metadata_keygenerate_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::KeyGenerateRequest* Arena::CreateMaybeMessage< ::KeyGenerateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::KeyGenerateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::KeyGenerateResponse_KeyPair* Arena::CreateMaybeMessage< ::KeyGenerateResponse_KeyPair >(Arena* arena) {
  return Arena::CreateInternal< ::KeyGenerateResponse_KeyPair >(arena);
}
template<> PROTOBUF_NOINLINE ::KeyGenerateResponse* Arena::CreateMaybeMessage< ::KeyGenerateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::KeyGenerateResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
