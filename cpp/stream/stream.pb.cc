// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stream.proto

#include "stream.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

class StreamReqDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamReqData> _instance;
} _StreamReqData_default_instance_;
class StreamResDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamResData> _instance;
} _StreamResData_default_instance_;
static void InitDefaultsStreamReqData_stream_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StreamReqData_default_instance_;
    new (ptr) ::StreamReqData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StreamReqData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StreamReqData_stream_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStreamReqData_stream_2eproto}, {}};

static void InitDefaultsStreamResData_stream_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StreamResData_default_instance_;
    new (ptr) ::StreamResData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StreamResData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StreamResData_stream_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStreamResData_stream_2eproto}, {}};

void InitDefaults_stream_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_StreamReqData_stream_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamResData_stream_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_stream_2eproto[2];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_stream_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_stream_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_stream_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::StreamReqData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StreamReqData, req_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::StreamResData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StreamResData, res_data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::StreamReqData)},
  { 6, -1, sizeof(::StreamResData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StreamReqData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StreamResData_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_stream_2eproto = {
  {}, AddDescriptors_stream_2eproto, "stream.proto", schemas,
  file_default_instances, TableStruct_stream_2eproto::offsets,
  file_level_metadata_stream_2eproto, 2, file_level_enum_descriptors_stream_2eproto, file_level_service_descriptors_stream_2eproto,
};

const char descriptor_table_protodef_stream_2eproto[] =
  "\n\014stream.proto\"!\n\rStreamReqData\022\020\n\010req_d"
  "ata\030\001 \001(\t\"!\n\rStreamResData\022\020\n\010res_data\030\001"
  " \001(\t2\236\001\n\007Greeter\022/\n\tGetStream\022\016.StreamRe"
  "qData\032\016.StreamResData\"\0000\001\022/\n\tPutStream\022\016"
  ".StreamReqData\032\016.StreamResData\"\000(\001\0221\n\tAl"
  "lStream\022\016.StreamReqData\032\016.StreamResData\""
  "\000(\0010\001b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_stream_2eproto = {
  false, InitDefaults_stream_2eproto, 
  descriptor_table_protodef_stream_2eproto,
  "stream.proto", &assign_descriptors_table_stream_2eproto, 253,
};

void AddDescriptors_stream_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_stream_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_stream_2eproto = []() { AddDescriptors_stream_2eproto(); return true; }();

// ===================================================================

void StreamReqData::InitAsDefaultInstance() {
}
class StreamReqData::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamReqData::kReqDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamReqData::StreamReqData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StreamReqData)
}
StreamReqData::StreamReqData(const StreamReqData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  req_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.req_data().size() > 0) {
    req_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.req_data_);
  }
  // @@protoc_insertion_point(copy_constructor:StreamReqData)
}

void StreamReqData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StreamReqData_stream_2eproto.base);
  req_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StreamReqData::~StreamReqData() {
  // @@protoc_insertion_point(destructor:StreamReqData)
  SharedDtor();
}

void StreamReqData::SharedDtor() {
  req_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StreamReqData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StreamReqData& StreamReqData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StreamReqData_stream_2eproto.base);
  return *internal_default_instance();
}


void StreamReqData::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamReqData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  req_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StreamReqData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StreamReqData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string req_data = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("StreamReqData.req_data");
        object = msg->mutable_req_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StreamReqData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StreamReqData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string req_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_req_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->req_data().data(), static_cast<int>(this->req_data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamReqData.req_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StreamReqData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StreamReqData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StreamReqData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StreamReqData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string req_data = 1;
  if (this->req_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->req_data().data(), static_cast<int>(this->req_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamReqData.req_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->req_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StreamReqData)
}

::google::protobuf::uint8* StreamReqData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamReqData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string req_data = 1;
  if (this->req_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->req_data().data(), static_cast<int>(this->req_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamReqData.req_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->req_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamReqData)
  return target;
}

size_t StreamReqData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamReqData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string req_data = 1;
  if (this->req_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->req_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamReqData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StreamReqData)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamReqData* source =
      ::google::protobuf::DynamicCastToGenerated<StreamReqData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StreamReqData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StreamReqData)
    MergeFrom(*source);
  }
}

void StreamReqData::MergeFrom(const StreamReqData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StreamReqData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.req_data().size() > 0) {

    req_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.req_data_);
  }
}

void StreamReqData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StreamReqData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamReqData::CopyFrom(const StreamReqData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamReqData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamReqData::IsInitialized() const {
  return true;
}

void StreamReqData::Swap(StreamReqData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamReqData::InternalSwap(StreamReqData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  req_data_.Swap(&other->req_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata StreamReqData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_stream_2eproto);
  return ::file_level_metadata_stream_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StreamResData::InitAsDefaultInstance() {
}
class StreamResData::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamResData::kResDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamResData::StreamResData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StreamResData)
}
StreamResData::StreamResData(const StreamResData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  res_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.res_data().size() > 0) {
    res_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.res_data_);
  }
  // @@protoc_insertion_point(copy_constructor:StreamResData)
}

void StreamResData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StreamResData_stream_2eproto.base);
  res_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StreamResData::~StreamResData() {
  // @@protoc_insertion_point(destructor:StreamResData)
  SharedDtor();
}

void StreamResData::SharedDtor() {
  res_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StreamResData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StreamResData& StreamResData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StreamResData_stream_2eproto.base);
  return *internal_default_instance();
}


void StreamResData::Clear() {
// @@protoc_insertion_point(message_clear_start:StreamResData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  res_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StreamResData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StreamResData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string res_data = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("StreamResData.res_data");
        object = msg->mutable_res_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StreamResData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StreamResData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string res_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_res_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->res_data().data(), static_cast<int>(this->res_data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StreamResData.res_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StreamResData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StreamResData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StreamResData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StreamResData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string res_data = 1;
  if (this->res_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->res_data().data(), static_cast<int>(this->res_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamResData.res_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->res_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StreamResData)
}

::google::protobuf::uint8* StreamResData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:StreamResData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string res_data = 1;
  if (this->res_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->res_data().data(), static_cast<int>(this->res_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StreamResData.res_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->res_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StreamResData)
  return target;
}

size_t StreamResData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StreamResData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string res_data = 1;
  if (this->res_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->res_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamResData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StreamResData)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamResData* source =
      ::google::protobuf::DynamicCastToGenerated<StreamResData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StreamResData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StreamResData)
    MergeFrom(*source);
  }
}

void StreamResData::MergeFrom(const StreamResData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StreamResData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.res_data().size() > 0) {

    res_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.res_data_);
  }
}

void StreamResData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StreamResData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamResData::CopyFrom(const StreamResData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StreamResData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamResData::IsInitialized() const {
  return true;
}

void StreamResData::Swap(StreamResData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamResData::InternalSwap(StreamResData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  res_data_.Swap(&other->res_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata StreamResData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_stream_2eproto);
  return ::file_level_metadata_stream_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::StreamReqData* Arena::CreateMaybeMessage< ::StreamReqData >(Arena* arena) {
  return Arena::CreateInternal< ::StreamReqData >(arena);
}
template<> PROTOBUF_NOINLINE ::StreamResData* Arena::CreateMaybeMessage< ::StreamResData >(Arena* arena) {
  return Arena::CreateInternal< ::StreamResData >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
